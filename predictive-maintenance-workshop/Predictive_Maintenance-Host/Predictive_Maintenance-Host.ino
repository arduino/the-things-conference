#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Predictive Maintenance"
  https://create.arduino.cc/cloud/things/642a4c96-d567-4c41-9310-23f3cd67ba4f 

  Arduino IoT Cloud Variables description
  The following variables are automatically generated and updated when changes are made to the Thing
  bool runningNormal;
*/

#include "thingProperties.h"
#include <Wire.h>

#define STATUS_ANOMALY_DETECTED 1
#define PERIPHERAL_I2C_ADDRESS 8
#define POLL_INTERVAL_MS 6000

void updateStatus(){
  bool anomalyDetected = detectAnomaly();
  
  if(runningNormal == !anomalyDetected) return;
  runningNormal = !anomalyDetected;
  deviceFailure = runningNormal ? 0 : 1;
  
  if(anomalyDetected){
    Serial.println("Vibration anomaly detected.");
  } else {
    Serial.println("Device running normal.");        
  }
  digitalWrite(LED_BUILTIN, anomalyDetected ? HIGH : LOW); 
}

bool detectAnomaly(){
  Wire.requestFrom(PERIPHERAL_I2C_ADDRESS, 1);    // request 1 byte from peripheral device
  if(!Wire.available()) return false;
  return Wire.read() == STATUS_ANOMALY_DETECTED; 
}

void initCloud(){
  runningNormal = true;
  initProperties(); // Defined in thingProperties.h
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void setup() {
  pinMode(LED_BUILTIN, OUTPUT); 
  Serial.begin(9600); // Initialize serial and wait for port to open
  while(!Serial);
  Wire.begin(); // join i2c bus (address optional for master)
  Serial.println("Application started.");
  initCloud();
}

void loop() {
  static auto lastUpdate = millis();
  
  if (millis() - lastUpdate >= POLL_INTERVAL_MS) {
    lastUpdate = millis();
    updateStatus();
  }
  
  ArduinoCloud.update();
}
